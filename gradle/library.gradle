// apply from: "https://raw.githubusercontent.com/xinzhazha/AndroidBuildScript/master/gradle/common_config.gradle"
apply from: "https://wander-soutu.oss-cn-beijing.aliyuncs.com/buildscript/android/common_config.gradle"

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

// 如果 libs 下面有 .jar 或者 .aar 文件，发布 aar 到 maven 的时候才能带上
// 目前还是存在问题，待解决
// repositories {
//     flatDir {
//         dirs 'libs'
//     }
// }

android {
    compileSdkVersion COMPILE_SDK_VERSION.toInteger()

    defaultPublishConfig "release"

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION.toInteger()
        targetSdkVersion TARGET_SDK_VERSION.toInteger()

        vectorDrawables.useSupportLibrary = true
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
            proguardFile 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
}
if (isBaseProject() || isCommonProject()) {
    // apply from: "https://raw.githubusercontent.com/xinzhazha/AndroidBuildScript/master/gradle/maven_publish.gradle"
    apply from: "https://wander-soutu.oss-cn-beijing.aliyuncs.com/buildscript/android/maven_publish.gradle"
}

// 读取自己工程下的 gradle.properties
ext.mavenMap = {
    String projectName = project.getName()
    println("project name : " + projectName)
    println("project path : " + projectDir.getPath())
    File propertiesFile = project.file('../gradle.properties')
    println("gradle.properties path : " + propertiesFile.getPath())
    if (propertiesFile.exists()) {
        println("read gradle.properties file is : success")
        InputStream inputStream = propertiesFile.newDataInputStream();
        Properties properties = new Properties()
        properties.load(inputStream)
        return properties
    } else {
        println("read gradle.properties file is : failed")
    }
}

ext.mavenProperties = mavenMap()

ext.isEmpty = {
    String s ->
        return s == null || s.isEmpty()
}

ext.getLib = {String libName ->
    if (mavenProperties == null) {
        println("mavenProperties == null : " + target)
        return libName
    }
    def target = mavenProperties.getProperty(libName)
    if (isEmpty(target)) {
        println("target == null : " + libName)
        return libName
    }
    println("maven aar : " + target)
    return target
}